name: Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - name: Set Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.3.app
    - name: Cache SwiftPM packages
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-swiftpm-${{ hashFiles('**/Package.resolve') }}
        restore-keys: |
          ${{ runner.os }}-swiftpm-
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v

  build-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Swiftly
      run: |
        curl -L https://swift-server.github.io/swiftly/swiftly-install.sh | bash -s -- --disable-confirmation
    - name: Install Swift
      run: |
        swiftly install latest
    - name: Cache SwiftPM packages
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-swiftpm-${{ hashFiles('**/Package.resolve') }}
        restore-keys: |
          ${{ runner.os }}-swiftpm-
    - name: Build for release
      run: |
        swift build -c release --static-swift-stdlib
    - name: Package executable
      run: |
        mkdir -p .build/install
        cp -P .build/release/SlyDevServer .build/install
        tar cvzf sly.dev-0.0.1.tar.gz -C .build/install .
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: sly.dev-executable
        path: sly.dev-0.0.1.tar.gz

  deploy-to-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        env:
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_KEY}" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
